# --------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# Virtual Memory Management
# --------------------------------------------------------------------------------------------------------------------------------------------------------------------------

# Contains, as a bytes of total available memory that contains free pages and reclaimable
# pages, the number of pages at which the background kernel flusher threads will start writing out
# dirty data.
vm.dirty_background_bytes = 67108864

vm.dirty_background_ratio = 5                  # Percentage of system memory at which background writeback starts

# Contains, as a bytes of total available memory that contains free pages and reclaimable
# pages, the number of pages at which the background kernel flusher threads will start writing out
# dirty data. (adjusted for SSD)
vm.dirty_bytes = 268435456

# This tunable is used to define when dirty data is old enough to be eligible for writeout by the
# kernel flusher threads.  It is expressed in 100'ths of a second.  Data which has been dirty
# in-memory for longer than this interval will be written out next time a flusher thread wakes up
# (Default is 3000).
vm.dirty_expire_centisecs = 1000

vm.dirty_ratio = 30                            # Set the ratio of dirty memory at which a process is forced to write out dirty data (10%). Adjusted for SSD.
vm.dirty_time=1                                # Enable dirty time accounting to track dirty page age.

# The kernel flusher threads will periodically wake up and write old data out to disk.  This
# tunable expresses the interval between those wakeups, in 100'ths of a second (Default is 500).
vm.dirty_writeback_centisecs = 100

vm.extfrag_threshold = 100                     # Fragmentation threshold for the kernel

# This file contains the maximum number of memory map areas a process may have. Memory map areas are used as a side-effect of calling malloc, directly by mmap, mprotect, and
# madvise, and also when loading shared libraries. While most applications need less than a thousand maps, certain programs, particularly malloc debuggers, may consume lots
# of them, e.g., up to one or two maps per allocation.  The default value is 65536
# Value is higher set to fix games like DayZ, Hogwarts Legacy, Counter Strike 2
# Automatically handeled by the CachyOS kernel, see this commit: https://github.com/CachyOS/linux/commit/ad252ae5f828a24f173fb99b65009aa2105836af
vm.max_map_count = 1000000

vm.min_free_kbytes=131072                      # Minimum free kilobytes
vm.mmap_min_addr = 65536                       # Minimum address allowed for a user-space mmap

# page-cluster controls the number of pages up to which consecutive pages are read in from swap in a single attempt.
# This is the swap counterpart to page cache readahead. The mentioned consecutivity is not in terms of virtual/physical addresses,
# but consecutive on swap space - that means they were swapped out together. (Default is 3)
# increase this value to 1 or 2 if you are using physical swap (1 if ssd, 2 if hdd)
vm.page-cluster = 0

# The sysctl swappiness parameter determines the kernel's preference for pushing anonymous pages or page cache to disk in memory-starved situations.
# A low value causes the kernel to prefer freeing up open files (page cache), a high value causes the kernel to try to use swap space,
# and a value of 100 means IO cost is assumed to be equal.
vm.swappiness = 10

# The value controls the tendency of the kernel to reclaim the memory which is used for caching of directory and inode objects (VFS cache).
# Lowering it from the default value of 100 makes the kernel less inclined to reclaim VFS cache (do not set it to 0, this may produce out-of-memory conditions)
vm.vfs_cache_pressure=90

# Linux System Optimization
# --------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# FileSystem Tweaks
# --------------------------------------------------------------------------------------------------------------------------------------------------------------------------
fs.aio-max-nr = 524288                        # Defines the maximum number of asynchronous I/O requests that can be in progress at a given time.

# Set size of file handles and inode cache
fs.file-max = 67108864

# Set the maximum watches on files (default 8192)
fs.inotify.max_user_watches = 1048576

fs.suid_dumpable=2                             # Set SUID_DUMPABLE flag. 0 means not core dump, 1 means core dump, and 2 means core dump with setuid

# Increase writeback interval  for xfs
#fs.xfs.xfssyncd_centisecs = 10000
