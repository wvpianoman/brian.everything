# --------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# Network Tweaks
# --------------------------------------------------------------------------------------------------------------------------------------------------------------------------
net.core.default_qdisc = cake
#net.core.default_qdisc = fq
#net.core.default_qdisc = fq_codel

# Increase netdev receive queue
# May help prevent losing packets
net.core.netdev_max_backlog = 30000

net.core.optmem_max = 1073741824               # Maximum ancillary buffer size allowed per socket
net.core.rmem_default = 4194304                # Default socket receive buffer size
net.core.rmem_max = 16777216                   # Maximum socket receive buffer size

# Increase the maximum connections
# The upper limit on how many connections the kernel will accept (default 4096 since kernel version 5.6):
net.core.somaxconn = 65536                     # Maximum listen queue backlog

net.core.wmem_default = 4194304                # Default socket send buffer size
net.core.wmem_max = 16777216                   # Maximum socket send buffer size

# --------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# IPv4 Network Configuration
# --------------------------------------------------------------------------------------------------------------------------------------------------------------------------

net.ipv4.conf.*.promote_secondaries = 1        # Promote secondary addresses when the primary address is removed
net.ipv4.conf.*.rp_filter = 2                  # Enable source route verification
net.ipv4.conf.all.log_martians = 1
net.ipv4.conf.all.secure_redirects = 0         # Disable acceptance of secure ICMP redirected packets
net.ipv4.conf.all.send_redirects = 0           # Disable sending of all IPv4 ICMP redirected packets
net.ipv4.conf.default.accept_redirects = 0     # Disable acceptance of all ICMP redirected packets (default)
net.ipv4.conf.default.log_martians = 1
net.ipv4.conf.default.promote_secondaries = 1  # Promote secondary addresses when the primary address is removed
net.ipv4.conf.default.rp_filter = 2            # Enable source route verification
net.ipv4.conf.default.secure_redirects = 0     # Disable acceptance of secure ICMP redirected packets (default)
net.ipv4.conf.default.send_redirects = 0       # Disable sending of all IPv4 ICMP redirected packets (default)
net.ipv4.ip_forward = 1                        # Enable IP forwarding
net.ipv4.ipfrag_high_threshold=5242880         # Threshold to reduce fragmentation

# The BBR3 congestion control algorithm can help achieve higher bandwidths and lower latencies for internet traffic
net.ipv4.tcp_congestion_control = bbr
# net.ipv4.tcp_congestion_control = bbr2
# net.ipv4.tcp_congestion_control = westwood

net.ipv4.tcp_dsack = 1                         # Enable Delayed SACK

# TCP Enable ECN Negotiation by default
net.ipv4.tcp_ecn = 1

# Enable TCP Fast Open
# TCP Fast Open is an extension to the transmission control protocol (TCP) that helps reduce network latency
# by enabling data to be exchanged during the senderâ€™s initial TCP SYN [3].
# Using the value 3 instead of the default 1 allows TCP Fast Open for both incoming and outgoing connections:
net.ipv4.tcp_fastopen = 3

net.ipv4.tcp_fin_timeout = 25                  # Time to hold socket in FIN-WAIT-2 state (seconds)
net.ipv4.tcp_keepalive_intvl = 15              # Time between individual TCP keepalive probes (seconds)
net.ipv4.tcp_keepalive_probes = 3              # Number of TCP keepalive probes
net.ipv4.tcp_keepalive_time = 120              # Time before sending TCP keepalive probes (seconds)
net.ipv4.ip_local_port_range = 2000 65535      # Allowed local port range
net.ipv4.tcp_max_orphans = 819200              # Maximum number of TCP sockets not attached to any user file handle
net.ipv4.tcp_max_syn_backlog = 20480           # Maximum length of the listen queue for accepting new TCP connections
net.ipv4.tcp_max_tw_buckets = 1440000          # Maximum number of TIME-WAIT sockets
net.ipv4.tcp_mem = 65536 1048576 16777216      # TCP memory allocation limits
net.ipv4.tcp_mtu_probing = 1                   # Enable Path MTU Discovery
net.ipv4.tcp_notsent_lowat = 16384             # Minimum amount of data in the send queue below which TCP will send more data
net.ipv4.tcp_retries2 = 8                      # Number of times TCP retransmits unacknowledged data segments for the second SYN on a connection initiation

# Protect against tcp time-wait assassination hazards, drop RST packets for sockets in the time-wait state. Not widely supported outside of Linux, but conforms to RFC:
net.ipv4.tcp_rfc1337 = 1

net.ipv4.tcp_rmem = 4096 87380 1073741824      # TCP read memory allocation for network sockets
net.ipv4.tcp_sack = 1                          # Enable Selective Acknowledgment (SACK)

# Disable TCP slow start after idle  Helps kill persistent single connection performance
net.ipv4.tcp_slow_start_after_idle = 0

net.ipv4.tcp_synack_retries = 2                # Number of times SYNACKs for passive TCP connection.
net.ipv4.tcp_syncookies = 1

# TCP Reduce performance spikes
# Refer https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux_for_real_time/7/html/tuning_guide/reduce_tcp_performance_spikes
net.ipv4.tcp_timestamps = 0

net.ipv4.tcp_window_scaling = 1                # Enable TCP window scaling
net.ipv4.tcp_wmem = 4096 87380 1073741824      # TCP write memory allocation for network sockets
net.ipv4.udp_mem = 65536 1048576 16777216      # UDP memory allocation limits
net.ipv4.ip_local_port_range = 2000 65535      # Allowed local port range
net.ipv4.tcp_rfc1337 = 1                       # Protect Against TCP Time-Wait
net.ipv4.udp_rmem_min = 16384                  # Increase the read-buffer space allocatable
net.ipv4.udp_wmem_min = 16384                  # Increase the write-buffer-space allocatable
net.ipv4.tcp_tw_reuse = 1                      # Increase the tcp-time-wait buckets pool size to prevent simple DOS attacks
net.ipv4.tcp_synack_retries = 2                # Number of times SYNACKs for passive TCP connection.

# TCP SYN cookie protection
# Helps protect against SYN flood attacks. Only kicks in when net.ipv4.tcp_max_syn_backlog is reached:
net.ipv4.tcp_syncookies = 1

# --------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# IPv6 Network Configuration
# --------------------------------------------------------------------------------------------------------------------------------------------------------------------------

net.ipv6.conf.all.accept_redirects = 0         # Disable acceptance of all ICMP redirected packets for IPv6
net.ipv6.conf.all.disable_ipv6 = 0             # Enable IPv6
net.ipv6.conf.all.forwarding = 1               # Enable IPv6 packet forwarding
net.ipv6.conf.default.accept_redirects = 0     # Disable acceptance of all ICMP redirected packets for IPv6 (default)
net.ipv6.conf.default.disable_ipv6 = 0         # Enable IPv6

