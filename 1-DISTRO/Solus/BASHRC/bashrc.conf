source /usr/share/defaults/etc/profile

###---------- Konsole effects ----------###
# PS1="\[\e[1;m\]┌(\[\e[1;32m\]\u\[\e[1;34m\]@\h\[\e[1;m\]) \[\e[1;m\]➤\[\e[1;36m\] \W \[\e[1;m\] \n\[\e[1;m\]└\[\e[1;33m\]➤\[\e[0;m\]  "

###---------- Vscoding ----------###
eval "$(direnv hook bash)"

###---------- Solus related ----------###
alias solus='sudo mount -a && sudo systemctl daemon-reload && sudo udevadm control --reload-rules && sudo udevadm trigger && sudo sysctl --system'

# Function to generate a random color code
random_color() {
  echo $((16 + RANDOM % 216))
}

# Function to generate a random color code
random_color() {
  echo $((16 + RANDOM % 216))
}

# Define colors
YELLOW=226
WHITE=231
BRIGHT_BLUE=81

# Function to display fortune with random colors
fortune_with_random_colors() {
  local color
  color=$(random_color)
  printf "\033[38;5;%dm%s\033[0m\n" "$color" "$1"
}

# Check if the system is Solus
if [ -f "/usr/bin/eopkg" ]; then
  # Solus system
  export PATH="/home/brian/.nix-profile/bin:$PATH"
  . /home/brian/.nix-profile/etc/profile.d/nix.sh
  export LC_ALL=en_US.utf8
  export LANG=en_US.utf8
  export PATH="/home/brian/.nix-profile/bin:$PATH"
  export PATH=$PATH:/usr/local/bin/direnv
  export PATH="$HOME/.nix-profile/bin:$PATH"
  export PATH="$HOME/.nix-profile/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/snap/bin"

  FORTUNE_COMMAND="fortune"
else
  # Other distro
  FORTUNE_COMMAND="fortune"
fi

# Fetch the fortune message
fortune_message="$($FORTUNE_COMMAND)"

# Display the fortune message with random colors
#echo "" && fortune_with_random_colors "$fortune_message" && echo ""

# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=10000
HISTFILESIZE=20000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

XDG_DESKTOP_DIR="$HOME/"
XDG_DOWNLOAD_DIR="$HOME/"
XDG_DOCUMENTS_DIR="$HOME/"
XDG_MUSIC_DIR="$HOME/"
XDG_PICTURES_DIR="$HOME/"
XDG_VIDEOS_DIR="$HOME/"
XDG_TEMPLATES_DIR="$HOME/Templates"
XDG_PUBLICSHARE_DIR="$HOME/Public"

# Check whether if the windowing system is Xorg or Wayland windowing system and set environment variables accordingly
# Tolga Erok

if [[ ${XDG_SESSION_TYPE} == "wayland" ]]; then
    export MOZ_ENABLE_WAYLAND=1
    export OBS_USE_EGL=1
    echo "Running on Wayland: Enabled Wayland-specific settings."
    echo "" && sleep 1

elif [[ ${XDG_SESSION_TYPE} == "x11" ]]; then
    export MOZ_ENABLE_WAYLAND=0
    export OBS_USE_EGL=0
    echo "Running on Xorg: Disabled Wayland-specific settings."
    echo "" && sleep 1
else
    echo "Unknown windowing system: ${XDG_SESSION_TYPE}. No changes made."
    echo "" && sleep 1
fi

# Check if qt5ct is installed and set QT/Kvantum theme settings
if command -v qt5ct &>/dev/null; then
    export QT_QPA_PLATFORM="xcb"
    export QT_QPA_PLATFORMTHEME="qt5ct"
    echo "qt5ct is installed: QT settings applied."
    echo "" && sleep 1
else
    echo "qt5ct is not installed: QT settings not applied."
    echo "You can install qt5ct with: sudo dnf install qt5ct"
    echo "" && sleep 1
fi

echo "" && fortune | lolcat && echo ""




